name: CI/CD Pipeline

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: insightful_orders_test
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379

    steps:
      # Step 1 - Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2 - Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # Step 3 - Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      # Step 4 - Run migrations
      - name: Run migrations
        run: |
          export CONFIG=production
          export SQLALCHEMY_DATABASE_URI=postgresql://postgres:postgres@localhost:5432/insightful_orders_test
          export REDIS_URL=redis://localhost:6379/0
          flask db upgrade

      # Step 5 - Seed demo data
      - name: Seed demo data
        run: |
          export CONFIG=production
          export SQLALCHEMY_DATABASE_URI=postgresql://postgres:postgres@localhost:5432/insightful_orders_test
          export REDIS_URL=redis://localhost:6379/0
          flask seed-demo

      # Step 6 - Run tests
      - name: Run pytest
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          export DATABASE_URL=postgresql://postgres:postgres@localhost:5432/insightful_orders_test
          export REDIS_URL=redis://localhost:6379/0
          export JWT_SECRET_KEY=dummysecret
          pytest --maxfail=1 --disable-warnings -q

      # Step 7 - Log in to GitHub Container Registry
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      # Step 8 - Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/insightful-orders:latest .

      # Step 9 - Push Docker image
      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/insightful-orders:latest
