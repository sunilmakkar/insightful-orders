services: 
  # ----------------------------------------------------------------------
  # Flask API Service
  # ----------------------------------------------------------------------
  api:
    build: .  # Build from Dockerfile in current directory
    env_file:
      - .env  # Load environment variables from local file
    environment:
      # Explicitly pass key env vars (optional since they're in .env)
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - CONFIG=${CONFIG}
      - PYTHONPATH=/app   
      - API_BASE=http://api:5000
      - WS_BASE=ws://api:5000/ws/alerts
      - REDIS_URL=redis://redis:6379/0
      
    depends_on:
      - db     # Wait for Postgres to be healthy before starting
      - redis  # Wait for Redis to be healthy before starting
    ports:
      - "5050:5000"  # Host:Container â†’ expose API on http://localhost:5050
    volumes:
      - .:/app
    command: >
      sh -c "flask --app manage.py run --host=0.0.0.0 --port=5000"

  # ----------------------------------------------------------------------
  # Postgres Database 
  # ----------------------------------------------------------------------
  db:
    image: postgres:15
    ports:
      - "5432:5432"  # Host:Container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: insightful_orders
    volumes:
      - pgdata:/var/lib/postgresql/data  # Persist DB data across container restarts

  # ----------------------------------------------------------------------
  # Redis Cache
  # ----------------------------------------------------------------------
  redis:
    image: redis:7
    ports:
      - "6379:6379"  # Host:Container

# ----------------------------------------------------------------------
# Named Volumes
# ----------------------------------------------------------------------
volumes:
  pgdata:  # Stores persistent Postgres data
